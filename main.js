!function(){"use strict";class e{constructor(e){this._url=e}getInitialCards(){return fetch(`${this._url}/cards`,{headers:{authorization:"09c7eb58-4864-40aa-bfac-2e0d5eb72b05"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._url}/users/me`,{headers:{authorization:"09c7eb58-4864-40aa-bfac-2e0d5eb72b05"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}saveUserInfo(e){return fetch(`${this._url}/users/me`,{method:"PATCH",headers:{authorization:"09c7eb58-4864-40aa-bfac-2e0d5eb72b05","Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})})}addNewCard(e){return fetch(`${this._url}/cards`,{method:"POST",headers:{authorization:"09c7eb58-4864-40aa-bfac-2e0d5eb72b05","Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link,_id:e.id})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._url}/cards/${e}`,{method:"DELETE",headers:{authorization:"09c7eb58-4864-40aa-bfac-2e0d5eb72b05"}})}cardLikeToggle(e,t){return e?fetch(`${this._url}/cards/${t}/likes`,{method:"DELETE",headers:{authorization:"09c7eb58-4864-40aa-bfac-2e0d5eb72b05"}}):fetch(`${this._url}/cards/${t}/likes`,{method:"PUT",headers:{authorization:"09c7eb58-4864-40aa-bfac-2e0d5eb72b05"}})}updatePicture(e){return fetch(`${this._url}/users/me/avatar`,{method:"PATCH",headers:{authorization:"09c7eb58-4864-40aa-bfac-2e0d5eb72b05","Content-Type":"application/json"},body:JSON.stringify({avatar:e})})}}new e("https://around-api.en.tripleten-services.com/v1");class t{constructor(e,t,s,n,r){this._cardSelector=t,this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._handleImageClick=s,this._handleDeleteCard=n,this._handleCardLike=r}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._deleteButton.addEventListener("click",(e=>{this._handleDeleteCard(this._cardImage.id,this._cardElement)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleLikeButton(){this._handleCardLike(this._isLiked,this._cardImage.id),this._likeButton.classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.id=this._id,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._isLiked&&this._likeButton.classList.add("card__like-button_active"),this._setEventListeners(),this._cardElement}}class s{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputErr(e,t){const s=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=e.validationMessage,s.classList.add(this._errorClass)}_hideInputErr(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_toggleButtnState(){this._hasInvalInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalInput(){return this._inputElements.some((e=>!e.validity.valid))}_checkInputVal(e){e.validity.valid?this._hideInputErr(e):this._showInputErr(e)}_setEventListeners(){this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formElement.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtnState()}),0)})),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputVal(e),this._toggleButtnState()}))}))}enableValidation(){this._setEventListeners()}}class n{constructor(e){this._popupElement=e,this._handleEscClose=this._handleEscClose.bind(this)}openPopup(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose,!0)}closePopup(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose,!0)}_handleEscClose(e){"Escape"===e.key&&this.closePopup()}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.closePopup()})),this._popupElement.addEventListener("click",(e=>{e.target==this._popupElement&&this.closePopup()}))}}class r extends n{constructor(e,t){super(e),this._submitButton=e.querySelector(".modal__button"),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t=[];return e.forEach((e=>{t[e.name]=e.value})),t}closePopup(){this._popupForm.reset(),super.closePopup()}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t,this._submitButton)})),super.setEventListeners()}}class o{constructor(e,t){let{data:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}renderItem(){this._renderer(this._items)}addItem(e){this._container.prepend(e)}}const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},a=new e("https://around-api.en.tripleten-services.com/v1"),l=document.querySelector("#edit-modal"),c=document.querySelector("#add-modal"),u=document.querySelector("#delete-modal"),d=document.querySelector("#image-modal"),_=document.querySelector("#profile-picture-modal"),h=document.querySelector(".profile__edit-button"),m=(d.querySelector(".modal__close"),document.querySelector(".profile__add-button")),p=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector(".modal__input-name")),E=document.querySelector(".modal__input-description"),b=document.querySelector(".modal__input-title"),v=document.querySelector(".modal__input-url"),f=document.querySelector("#edit-profile-form"),S=document.querySelector("#add-card-form"),y=document.querySelector("#profile-picture-form"),C=document.querySelector(".media__list"),L=document.querySelector(".profile__avatar"),k=document.querySelector(".profile__avatar-icon"),g=[f,S,y],I=new class extends n{constructor(e){super(e)}openPopup(e){const t=this._popupElement.querySelector(".modal__image"),s=this._popupElement.querySelector(".modal__image-description");t.alt=e.name,t.src=e.link,s.textContent=e.name,super.openPopup()}}(d);function q(e,t){I.openPopup({name:e,link:t})}const P=new r(l,((e,t)=>{U.setUserInfo(e),a.saveUserInfo(e).then((()=>{t.textContent="Save",P.closePopup()})),t.textContent="Saving..."})),B=new r(_,((e,t)=>{a.updatePicture(e.url).then((e=>{t.textContent="Save",B.closePopup()})).catch((e=>{console.error(e)})),t.textContent="Saving..."})),w=new r(u,(()=>{}));function x(e,t){w.openPopup();const s=e;u.addEventListener("submit",(e=>{e.preventDefault(),a.deleteCard(s),t.remove(),w.closePopup()}))}function $(e,t){a.cardLikeToggle(e,t)}function T(e){return new t(e,"#card-template",q,x,$).getView()}h.addEventListener("click",(()=>{const e=U.getUserInfo();p.value=e.name,E.value=e.about,P.openPopup()})),g.forEach((function(e){new s(i,e).enableValidation()}));const U=new class{constructor(e){let{nameSelector:t,aboutMeSelector:s}=e;this._nameElement=document.querySelector(t),this._aboutMeElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,about:this._aboutMeElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._aboutMeElement.textContent=e.about}}({nameSelector:".profile__title",aboutMeSelector:".profile__description"});P.setEventListeners(),I.setEventListeners(),w.setEventListeners(),B.setEventListeners(),L.addEventListener("mouseover",(()=>{k.style.visibility="visible"})),L.addEventListener("mouseout",(()=>{k.style.visibility="hidden"})),L.addEventListener("click",(()=>{B.openPopup()})),Promise.all([a.getUserInfo(),a.getInitialCards()]).then((e=>{const t=e[0],s=e[1];U.setUserInfo(t);const n=new o({data:s,renderer:e=>{const t=T(e);n.addItem(t)}},C),i=new r(c,((e,t)=>{const s=b.value,r=v.value;a.addNewCard({name:s,link:r}).then((e=>{const o=e._id;!function(e,t){const s=T(e);n.addItem(s)}({name:s,link:r,_id:o}),t.textContent="Create",i.closePopup()})).catch((e=>{console.error(e)})),t.textContent="Saving..."}));m.addEventListener("click",(()=>{i.openPopup()})),n.renderItems(),i.setEventListeners()})).catch((e=>{console.error(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,